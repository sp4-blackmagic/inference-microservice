# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  run-tests:
    name: python unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        mkdir -p junit htmlcov coverage
        pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=src --cov-report=xml --cov-report=html --cov-report=lcov:coverage/lcov.info
        
    - name: Upload test results
      uses: actions/upload-artifact@v4  # Updated to v4
      if: always()
      with:
        name: pytest-results
        path: |
          junit/test-results.xml
          coverage.xml
          htmlcov/
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always()  # Always run this step, even if tests fail
      with:
        report_paths: 'junit/test-results.xml'
        fail_on_failure: true
        summary: true
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
    - name: Coverage Status Check
      uses: devmasx/coverage-check-action@v1.2.0
      with:
        type: lcov
        result_path: ./coverage/lcov.info
        min_coverage: 75
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate Coverage Badge
      uses: tj-actions/coverage-badge-py@v2
      with:
        output: coverage.svg
