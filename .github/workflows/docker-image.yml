name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:      
      contents: read  
      packages: write 
    
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU #needed for cross-compilation 
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically available



    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # Path to the directory containing your Dockerfile and application code
        push: true # Set to true if you want to push the image after building (requires login step above)
        load: false   # Load the image into the runner's local Docker daemon (useful if you wanted to test it in a subsequent step within this job)
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/${{ github.repository_owner }}/inference_microservice:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

      # If you wanted to add a step to test the built image (e.g., run it and check an endpoint),
      # you could do that here, since `load: true` makes the image available locally on the runner.
      # - name: Example: Run a simple test on the image
      #   run: |
      #     docker run -d --rm -p 8081:8000 your-username/my-fastapi-app:latest
      #     sleep 5 # Give the container a moment to start
      #     curl -f http://localhost:8081/health || exit 1 # Assuming you have a /health endpoint